---
import { getImage } from "@astrojs/image";
import TwSizeIndicator from "@components/TwSizeIndicator.astro";
import config from "@config/config.json";
import theme from "@config/theme.json";
import { plainify } from "@lib/utils/textConverter";
import Footer from "@partials/Footer.astro";
import Header from "@partials/Header.astro";
import "@styles/style.scss";


// types for frontmatters
export interface Props {
  title?: string;
  meta_title?: string;
  description?: string;
  image?: string;
  noindex?: boolean;
  canonical?: string;
  totalTime?:string;
  tags?: string[];
  categories?: string[]; 
  calories?:string; 
  recipeYield?: string; 
  recipeCuisine?:string; 
  recipeInstructions?:string[]; 
  recipe?:string[]; 
  prepTime?:string; 
  cookTime?:string
}

// distructure frontmatters
const { title, meta_title, description, image, date, totalTime, tags,categories, calories, noindex, canonical, recipeYield, recipeCuisine, recipeInstructions, recipe, prepTime, cookTime} =
  Astro.props;



    const { src } = await getImage({
      src: image || "/mascot2.png",
      alt: title!,
      format:"webp",
      width: 1000,
      height: 500
    });
  
  
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <!-- favicon -->
    <link rel="shortcut icon" href={config.site.favicon} />
    <!-- theme meta -->
    <meta name="theme-name" content="bookworm-light-astro" />
    <meta name="msapplication-TileColor" content="#000000" />
    <meta
      name="theme-color"
      media="(prefers-color-scheme: light)"
      content="#fff"
    />
    <meta
      name="theme-color"
      media="(prefers-color-scheme: dark)"
      content="#000"
    />
    <meta name="generator" content={Astro.generator} />
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />

 
    <link rel="sitemap" href="/sitemap-index.xml">

    <!-- responsive meta -->
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, maximum-scale=5"
    />

    <!-- title -->
    <title>
      {plainify(meta_title ? meta_title : title ? title : config.site.title)}
    </title>


    {canonical && <link rel="canonical" href={canonical} item-prop="url" />}


    {noindex && <meta name="robots" content="noindex,nofollow" />}

    <!-- meta-description -->
    <meta
      name="description"
      content={plainify(
        description ? description : config.metadata.meta_description
      )}
    />

    <!-- author from config.json -->
    <meta name="author" content={config.metadata.meta_author} />

    <!-- og-title -->
    <meta
      property="og:title"
      content={plainify(
        meta_title ? meta_title : title ? title : config.site.title
      )}
    />

    <!-- og-description -->
    <meta
      property="og:description"
      content={plainify(
        description ? description : config.metadata.meta_description
      )}
    />
    <meta property="og:type" content="website" />
    <meta
      property="og:url"
      content={`${config.site.base_url}/${Astro.url.pathname.replace("/", "")}`}
    />

    <!-- twitter-title -->
    <meta
      name="twitter:title"
      content={plainify(
        meta_title ? meta_title : title ? title : config.site.title
      )}
    />

    <!-- twitter-description -->
    <meta
      name="twitter:description"
      content={plainify(
        description ? description : config.metadata.meta_description
      )}
    />

    <!-- og-image -->
    <meta
      property="og:image"
      content={`${config.site.base_url}${
        image ? image : config.metadata.meta_image
      }`}
    />

    <!-- twitter-image -->
    <meta
      name="twitter:image"
      content={`${config.site.base_url}${
        image ? image : config.metadata.meta_image
      }`}
    />
    <meta name="twitter:card" content="summary_large_image" />

    <script type="application/ld+json" set:html={JSON.stringify({ 
      "@context": "https://schema.org/",
      "@type": "Recipe",
      "name": title,
      "image": [
        src
      ],
      "author": {
        "@type": "Person",
        "name": "Chat GPT"
      },
      "datePublished": date,
      "description": description,
      "prepTime": prepTime,
      "cookTime":cookTime,
      "totalTime": totalTime,
      "keywords": tags?.join(",") ||"",
      "recipeYield": recipeYield,
      "recipeCategory": categories?.at(0),
      "recipeCuisine": recipeCuisine,
      "nutrition": {
        "@type": "NutritionInformation",
        "calories": `${calories} calories`
      },
      "recipeIngredient": recipe,
      "recipeInstructions": [ recipeInstructions?.join(" ")],
        
    })}/>
  </head>
  <body>
    <TwSizeIndicator />
    <Header />
    <main id="main-content" class="min-h-[60vh]">
      <slot />
    </main>
    <Footer />
  </body>
</html>
